24/06 - 11:30-15:00 (3.5 hrs)   - started working on wxpython's container poc dockerfile
25/06 - 17:00-19:00 (2 hr)      - success building the wxpython container, still can not run the container
28/06 - 11:00-18:00 (7 hrs)     - success running wxPython docker container (with GUI) and worked on windows based container for testing
29/06 - 12:00-16:45 (4.75 hrs)  - Researched for a solution to the WIN REG access problem, started working on it. also finished the resource consumption POC.
30/06 - 11:00-15:00 (4 hrs)     - Worked on connecting the Docker container to the host using SSH + executing scripts on the host (for read/write host's Windows Registry)
1/7   - 11:30-15-30 (4 hrs)     - Success in connecting the Docker container and the host via SSH, success running REG EDIT from container on host, still a few missing finishes
2/7   - 14:30-17:00 (2.5 hrs)   - Started working on user expirance issues and improved scripts.
6/7   - 12:00-14:30 (2.5 hrs)   - First go-no-go meeting with Elhanan. Started working on accessing to Windows Registry via python instead of REG QUERY like Elhanan asked.
7/7   - 14:00-17:00 (3 hrs)     - Wrote a python script like Elhana asked. but the ssh is asking for a password, so I had to go back and try to access the HOST via ssh without password, could'nt solve this for now.
8/7   - 20:00-20:45 (0.75 hrs)  - Added a firefox web Dockerized app, still need to complete access to HOST via SSH without password
10/7  - 11:00-13:15 (2.75 hrs)  - Success accessing HOST via SSH without password, first POC stage is complete
12/7  - 12:30-16:30 (4 hrs)     - Elhanan wanted to run diffrent wxpython code on wxpython's container, got some errors but fixed it 
13/7  - 12:00-15:00 (3 hrs)     - Still trying to figure out how to solve the problem that the wxPython new app raised, almost no documentation on that topic, so im trying all sorts of things
14/7  - 11:15-14:45 (3.5 hrs)   - Still trying to fix the error raised by the new wxpython container, found more information on the problem, looking for a good solution 
15/7  - 13:00-16:30 (3.5 hrs)   - Solved the Nvidia driver error i had, progrem runed successfully once and for some reason didnt run again, seems like the problem is related to system languge
16/7  - 13:15-17:00 (3.75 hrs)  - Solved last error but still application not loading, running out of ideas, so Elhanan and I will have a meeting Sunday and try another way
19/7  - 12:00-14:00 (2 hrs)     - Created 2 virtual environments, installed different wxPython versions on them for the sake of the POC
20/7  - 12:00-14:00 (2 hrs)     - Started creating bash files for automation of the task 
21/7  - 17:00-19:00 (2 hrs)     - Tried creating automation for the task with batch (.bat) files instaed of bash (.sh) files, with success
22/7  - 12:00-14:30 (2.5 hrs)   - Searched a way to 'containerize' an application without Docker, found few options and looked into them, selected one of the options (pyinstaller) and started working on it
23/7  - 11:30-16:00 (4.5 hrs)   - Containerized an wxPython application successuflly and runed it on a different windows 10 host successuflly
26/7  - 12:30-15:00 (2.5 hrs)   - Elhanan didnt aprove last finished'd task, and asked the following; "create a zip file which contains python and all the dependencies, and is executable from inside the file (don't need anything from the host) - creates python env and then runs the app". created another batch file and searched ways to zip python apps
27/7  - 15:00-16:00 (1 hrs)     - Run simple .py scripts from embeded python version on host with no python - worked
28/7  - 16:00-21:00 (5 hrs)     - Embeded version has no pip or venv - found a way to install pip; works good.  cant use venv for some reason, even after installing it manually
29/7  - 10:00-13:00 (3 hrs)     - Meeting with Elhanan in Ardom's office, disccused about integration to Ardom's servers.  Other then that, success in pip installing to direct dir, now need to figure out exacly how to use to installed dependencies
30/7  - 14:00-19:00 (5 hrs)     - Success accessing the install dependencies but for some reason python still cant use them, cant think for a reason for that and no available documentation (used https://stackoverflow.com/questions/49737721/adding-packages-to-python-embedded-installation-for-windows suggestion with a partial success)
2/8   - 15:00-19:00 (4 hrs)     - Looked at different python tools to solve the task, found py2exe and pyinstaller and made a POC, showed it to Elhanan and he asked to see it in Thursday, and that in the meanwhile ill keep trying to solve my former problem
4/8   - 11:30-16:30 (5 hrs)     - Still looking for a solution for the path problem, had decent progress but still no success, seems like the embedded python can use some packages and some not, might be related to packages with exe file in them, but im not sure. other then that, looked dipper into the tool i used to encapsulate the app so i can answer Elhanan questions more precisely.
5/8   - 13:30-18:00 (4.5 hrs)   - Continued searching for a solution for the path problem, tried all sorts of things, succeded using some packages, still cant tell why those work and the others dont - like i thought yesterday, maybe its related to exe files within the packge
6/8   - 17:30-19:30 (2 hrs)     - Still searching for a solution for the path problem, found https://stackoverflow.com/questions/39539089/what-files-are-required-for-py-initialize-to-run/39541474#39541474. i think that the suggested solution there might be releted to our problem, but its for python 2 and its quite complicated, so ill see if i can adress this in the weekend before the next meeting with Elhanan
9/8   - 12:30-21:00 (8.5 hrs)   - Meeting with Elhanan in the morning, showed him the problem i bumped into and the solution i found.  he asked for "test multiple python interpreters (different python versions) and run wxpython script.", succeded doing this today
10/8  - 13:30-21:00 (7.5 hrs)   - Meeting with Elhanan in the morning, showed him my result for yesterday's requirement, he approved it and asked for integration at Ardom, i made the needed modifications and upgrades, he also aked for a PowerPoint toturial for insalling and setting up Python as needed, did it as well. also created a ready-to-go .zip for integration
11/8  - 12:00-20:00 (8 hrs)     - Meeting with Elhanan in the morning, showed him my result for yesterday's requirement, he approved it and asked for template for py3.7 batch and don't show cmd when running, completed the first requast and searched for info on the second, still couldnt figure it out
12/8  - 13:30-18:30 (5 hrs)     - Kept looking for a way to execute the batch script withouth showing the cmd, found https://www.winhelponline.com/blog/run-bat-files-invisibly-without-displaying-command-prompt/ and implemented it - worked as expacted
13/8  - 13:00-18:30 (5.5 hrs)   - Meeting with Elhanan in the morning, finished first project.  Planned workplan for second project, then started to work on it, searched for relevent modules or tools, found python's OS module and started learning it and do relevent tests with it
16/8  - 11:00-18:30 (6.5 hrs)   - implemented first project in Ardom's server with Arik, and showed Elhanan the progress with the second project. after that continued to work on the code for second project and finished the 'set-up python' presentation for Elhanan.
17/8  - 12:30-20:30 (8 hrs)     - Kept working on the second project, made a lot of progress - built functions for getting relevent information, having trouble with the architecture of the script, looking into implementing it with OOP. Also Configured the first project's .vbs script for executing the app cleanly on Ardom's servers
18/8  - 12:00-18:30 (6.5 hrs)   - Another integration meeting with Arik in the morning, installed another python version as documented in the PowerPoint presentation. also created documentaion on 'set-up python', 'install zvpython' and 'upgrade zvpython'. after that continued to work on the script for the second project - made alot of progress, getting close to finishing all the file scraping
19/8  - 12:00-18:00 (6 hrs)     - Continued to work on the code for the second project, made alot of progress in the data manegment part, also started to work on integrating the data to excel and also made alot of progress in this part
20/8  - 12:30-17:30 (5 hrs)     - Continued to work on the code for the second project, made alot of progress in the subroot tab, which was complicated and made me some problems (had to rewrite insert_to_excel.py with OOP), still need to complete other tabs before showing to Elhanan
23/8  - 13:00-19:00 (6 hrs)     - Continued to work on the code for the second project, had alot of problems with subroot tab but maneged to complete it and its insertion to excel, now need to work on totals tab and figure out how to do the restricted-log tab
24/8  - 12:00-17:00 (5 hrs)     - Continued to work on the code for the second project, found a way to implement log-restricted tab, did some tests with restricted folders with admin and non-admin users, configured the code for log-restricted requast, and insertion to excel, still need to test on Ardom's servers because im not 100% sure about this part. also did alot of cleaning to the code which became messy
25/8  - 12:00-19:00 (7 hrs)     - Continued to work on the code for the second project, finished last tab (total tab), did a lot of refactoring and cleaning to the code, and basically finished the project, now need to show Elhanan and see if there's any other requasts
26/8  - 12:00-15:30 (3.5 hrs)   - Metting with Elhanan and Arik in the morning, tested the file_crawler script on Ardom's servers with success, Elhanan asked for further requirements as documented in our whatsapp chat.  after that started to work on the requirements, finished both adding date to file name and saving the file in the inputed path requirements, and started searching and thinking how to implement the indication to run end requirement
30/8  - 12:30-15:00 (2.5 hrs)   - Kept working on Elhanan's further requirements, finished giving indication to end of run + pop-up message when script finishes. also finished requirement of displaying size in GB with 2 numbers after the dot
31/8  - 13:00-16:30 (3.5 hrs)   - Kept working on Elhanan's further requirements, finished the last remaining requasts, adding another tab which will filter by file types only, and to add a root column to the sub-root tab, will scadule a meeting with Elhanan for tommorow to show the finished product
1/9   - 13:00-16:30 (3.5 hrs)   - Integration day with Arik and Elhanan, tried to run the file_crawler script on Ardom's servers on large path's, faced some troubles and fixed them, other then that seems that the script works as intended but takes a lot of time to finish when running on large Path's ------UPDATE - script run overnight and did worked as intended, Elhanan had further requasts thought ("Use Pandas/Numpy modules")
2/9   - 14:00-18:30 (4.5 hrs)   - Started learning pandas and numpy modules, also started testing pandas and tried to implement it into the code with no success, will continue learning Pandas module and keep working on it tommorow
3/9   - 12:30-17:30 (5 hrs)     - Kept working on the Pandas module, finished a YouTube course about pandas (did not write hrs for that), did a lot (!!) of tests and succeded implementing Root Tab almost completly, tommorow will work on implementing other tabs
6/9   - 13:00-17:00 (4 hrs)     - Kept working on transfaring the file_crawler from EXCEL module to PANDAS module, finished implementing 'root tab' and also finished 'root by file type tab' and 'restricted files tab'
7/9   - 14:30-18:00 (3.5 hrs)   - Kept working on transfaring the file_crawler from EXCEL module to PANDAS module, moved all the pandas code to a designated file and cleaned the entire project. other then that, fixed some bugs in former tabs and still trying to figure out how to solve other 2 tabs (totals & sub-root) with no success
8/9   - 13:00-17:30 (4.5 hrs)   - Kept working on transfaring the file_crawler from EXCEL module to PANDAS module, solved last 2 tabs, cleaned and refactored a lot of code, fixed some bugs but still some to finish
9/9   - 12:30-18:30 (6 hrs)     - Finished requasts for transfaring file_crawler from 'xlsxwriter' to 'pandas', add functionallity to insert the data to a folder of .csv files and removed unnecessary code, also did some UX improvments like saving the file in the desired spot etc
13/9  - 16:30-18:30 (2 hrs)     - Zoom integration meeting with Arik and Elhanan, tested pandas file_crawler and worked as expacted.  Elhanan asked for 2 more features and finished one of them today (add unicode encoding to the crawler)
14/9  - 12:30-19:00 (6.5 hrs)   - Finished last feature Elhanan asked for, reorginazing the pandas headers. Ehanan asked for more features documented in our Gmail chat, so started working on the first one - Extract file type from sub-root that are bigger then 1GB.  Did some progress, need to fix prior bugs in order to finish the task, tried to fix it in all sorts of ways, and tommorow will continue, i think ive figured out how to solve it.
15/9  - 13:00-19:00 (6 hrs)     - Kept working on yesterday's feature and finished it with success, moving on to the next requast - "INPUT - file type extensions, for example 'mp4 + txt' ---> OUTPUT - sum of mp4+txt for each first sub-root.". Finished second requast with success. Started looking at third requast - "User input sub-sub-root and root --> return return regular analysis for all sub-sub-roots in root".
16/9  - 12:30-18:00 (5.5 hrs)   - Kept working on yesterday's third and last feature - "User input sub-sub-root and root --> return return regular analysis for all sub-sub-roots in root". finished it with success.
17/9  - 13:00-17:30 (4.5 hrs)   - Zoom meeting with Elhanan and Arik, showed them last upgrades and they asked to fix 1 feature. other then that asked documentaion for the project and different .bat file for each analysis type. Started working on fixing last feature - finished with success. Started working on .bat scripts for each analysis type - finished with success. Then documented the the process to execute on a different machine on a PowerPoint presentation.
21/9  - 15:30-17:30 (2 hrs)     - Zoom meeting with Elhanan and Arik, tried new features - everything worked as expected.  Elhanan asked 2 more things "1. case sensitive file type input fix in sub-sub 2. check if file is located on host or on cloud (status - onedrive)". Finished the first one and started searching for a solution for second problem.
22/9  - 15:00-19:30 (4.5 hrs)   - Kept searching for a solution for our OneDrive problem - found a solution but need aproval from Elhanan. Other then that did a zoom meeting with Arik in order to fix a problem that made the code to fail - found the problem, which is invalid year date (1600,1601...). Then we disccused how we should solve this problem as documented in my whatsapp chat with Elhanan
23/9  - 13:00-16:00 (3 hrs)     - Started working on a defensive function to prevent the error that occurred yesterday. Finished it as requasted.
29/9  - 13:30-14:30 (1 hrs)     - Last integration meeting with Arik, tested the new code and worked as expacted.
4/10  - 13:30-17:00 (3.5 hrs)   - Kept looking for another solution for Arik's OneDrive problem. Other then what I suggested a while ago, maybe found a way to solve the problem - Use windows built-in function to access the file's 'size on disk' attribute. Found some information about the topic, but couldnt understand how to implement.
5/10  - 14:00-17:00 (3 hrs)     - Still trying to implement yesterday's solution, while looking at other possible solutions. Having a lot of problems with all sorts of stuff, especially with Windows.
6/10  - 16:00-18:30 (2.5 hrs)   - Still trying to implement 2 day's ago solution, the source - https://stackoverflow.com/questions/3750590/get-size-of-file-on-disk, a C# function to get the SIZE ON DISK.  Tried to compile the C# program to check if it really works but couldnt compile it, so tried using the DLL functions mentioned there stright away, and it 1 of them worked. Need to figure out why the second function didnt work and then try and translate the C# code to a python script.  Other then that, still looking for other solutions. 
7/10  - 13:00-16:00 (3 hrs)     - Still trying to implement 3 day's ago solution, having partial success with running the two kernel32 functions, very close to full success, having some system errors. I will need to combine the 2 following https://stackoverflow.com/questions/3750590/get-size-of-file-on-disk solution, essentialy translating the C# code into Python.
8/10  - 13:30-16:00 (2.5 hrs)   - Still trying to implement 4 day's ago solution, succeded running one of the kernel32 functions successfully, still cant figure out the problem for second function.
11/10 - 12:30-18:30 (6 hrs)     - (weekend work - 5 hrs) succeded running both kernel32 functions and combining them and getting the correct file SIZE ON DISK. Then implemented into the code and refactored it so it will run faster. Then tested on C: drive and worked as expacted. (sunday work - 1 hrs) Elhanan asked to show logical size and not only size on disk so added it.
12/10 - 14:30-21:00 (6.5 hrs)   - Meeting with Elhanan, he described to me the next project.  Started learning the topic and searching for modules. found some interesting things and asked Elhanan for some written information about the needs. started searching the 'multiprocessing' python module and playing with it.
13/10 - 14:00-18:30 (4.5 hrs)   - Established a full-duplex connection with 2 process (threads) with the 'multiprocessing' python module. then recived Elhanan's code so learned it and started working thowords a solution, tested python's 'threading' module and tested it with queue which worked as expacted, still trying to figure out how to solve this.
14/10 - 10:30-16:30 (6 hrs)     - Wrote 2 classes, 1 is the 'telnet input' which constantly adds values to the queue, while the 2nd class is the 'django server' which constantly takes items from the queue. showed Elhanan what i did and he redirected me thowords the solution, a stand-alone queue that can be accessed from everywhere. implemented it successfully, need for feedback from Elhanan, and maybe ask for the entire code, which will make it much easier for me to finish the task.
15/10 - 10:30-15:30 (5 hrs)     - Kept working on the code and then went to Elhanan and we tried to implement it in Elhanan's code - without success.
18/10 - 15:30-19:30 (4 hrs), 8:30-16:00 (7.5 hrs) - (weekend work) found module 'persistqueue', tried it and worked perfectly as expacted, then implemented it into the demo-code - didnt work, returns ERROR: 'SQLite objects created in a thread can only be used in that same thread', which i didnt expact whould happen, then tried to think of ways to solve it and looked for relevent information. (sunday work) Solved yesterday's problem, and implemented into the demo-code. Then when to Elhanan and we tried to implement the solution into his code, we had some problems but solved them, then Elhanan decided to leave the 'queue' solution and try an SQLite3 solution. Then fixed the error Arik sent about last project.
19/10 - 12:00-18:30 (6.5 hrs)   - Wrote the SQL class Elhanan asked for, tested it with threds and looks like its thread-safe. other then that, fixed the errors Arik had with my last project's script.
1/11  - 15:15-20:00 (4.75 hrs)  - Solved the problem Arik had with the file crawler script.  Then started working on Elhanan's new task which documented in our email chat.  looked for ways to solve the problem and found some interesting options, will need to research further. 
2/11  - 11:30-18:00 (6.5 hrs)   - Looked at SQLAlchemy, looked like a very strong tool that might be a overkill for us, and will be to complicated. so started trying to implement with 2 queues, 1 for requasting db function, and 1 for the result, have more reaseach and more work to do.  Then Elhanan needed a script to insert jsons into db with uid so did that and sent him.
3/11  - 10:45-17:30 (6.75 hrs)  - Tested yesterday's script i sent to Elhanan to see how much time it takes. Then kept working on the sql-threads problem, did a lot of progress with the queues solution, but then figured that what i was trying to do could cause a bottleneck and if i solved that problem (the bottleneck problem) it would be an anti-pattern (trying to filter response from queue), so searched for another solution, and bumped into SQLAlchemy again but saw information i didnt see before about connection pooling, so tried to implement it. Then saw this https://stackoverflow.com/questions/6297404/multi-threaded-use-of-sqlalchemy, which reassured me that sqlite can only have 1 connection at a time and that this bottleneck with sqlite is inevitable. Then spoke to Elhanan and he asked to go in a different approach, timeouts. then touched up a bit the queue code for it to be useable for further usage.
4/11  - 13:30-17:30 (4 hrs)     - Yesterday Elhanan asked me to indicate when a process is accessing the DB, so started working on it, made progress but couldnt figure it out yet.
5/11  - 11:30-17:30 (6 hrs)     - Elhanan asked to check the data types which will make our create table function the fastest. checked and reaseached a lot and my conclusion is that it doesnt
9/11  - 12:30-19:30 (7 hrs)     - Meeting with Elhanan in Eilot, looked for option for optimazing the system, and did some successfully. Said we would try in-memory db to optimaize some more, so i made a POC of that.
11/11 - 13:00-17:30 (4.5 hrs)   - Meeting with Elhanan in Eilot, i was instructed to find the fastest way to use WINREG as a 'reference point' with large strings, so started working on that.
12/11 - 12:30-18:30 (6 hrs)     - It takes 0.001 seconds to compress the string which is almost double then PUTing the large string into the WINREG, so this is not relevent.  it took 0.17452168464660645 sec to PUT a large string of size 170041 into WINREG 1000 times, it took 84.09048748016357 sec to PUT a large string of size 170041 into SQLite 1000 times, so winreg is much faster. other then that still trying to figure out how to improve to proformance of the winreg access more, couldnt find anything significant.
15/11 - 11:30-17:00 (5.5 hrs)   - Seems like there is not much to do to improve the WINREG performance as it is not intended to act as a quick I\O DB, like mentioned in here - https://stackoverflow.com/questions/2011647/how-to-improve-the-performance-of-write-data-into-registry. saw some other options to improve performance such as modifying some configurations in order to improve HOST performance but it seems random.  Then Elhanan asked me to search about making the winreg thread-safe and so on, so started doing that.  Did a lot of tests and windows registry works perfectly with threads.
22/11 - 13:30-19:30 (6 hrs)     - Went to Eilot to Elhanan to speak about the new project which is described in our Gmail chat, we also spoke with project managers Lior and Yosi.  Then started to work on the project, looked for tools to access all the servers in a nice way and found some interesting things but seems like nothing is relevent to just windows as SSH, so need approval from Lior that we can do the needed changes to the servers in order to access them via SSH. other then that, found some usful links and information for future development.
23/11 - 15:30-18:00 (2.5 hrs)   - Kept looking for usful tools and started implementing some scripts I will need later. Not sure how Lior wants me to connect to the servers but i will try via SSH.  
24/11 - 18:30-24:00 (5.5 hrs)   - Spoke with Lior and recalibrated the path to complition after he showed me how he access the servers from his host, started writing a python script that will do all the work, implemented relevent libaries and found usful content for future work.  
25/11 - 15:30-20:30 (5 hrs)     - Kept working on the python script, finished most functionallity just need an answer from Lior in regards to input the script get. other then that, cleaned and refactored the script.
29/11 - 16:00-23:00 (7 hrs)     - Started working on the GUI with wxPython, until recived answer from Lior about input to the script so got back to the python script and got stuck with something, will solve it tommorow.
30/11 - 16:30-22:00 (5.5 hrs)   - Finished functionallity of the project, need to test on Ardom's servers, finished the script and cleaned and refactored it.
2/12  - 17:30-22:30 (5 hrs)     - Kept working on GUI with wxPython, made a lot of progress and starting to get fimiliar with wxPython. send Lior a massege about needing to test the functionallity script, yet to recive an answer.
3/12  - 18:00-22:00 (4 hrs)     - Kept working on GUI with wxPython, stuck with some problems but solving them slowley but surley. (WEEKEND) - Kept working on GUI with wxPython, solved another problem i had but still have problems, will keep working tommorow
6/12  - 18:30-21:45 (3.15 hrs)  - Kept working on GUI with wxPython, solved some problems i struggled with, and very close to finishing GUI with functionallity. 
9/12  - 09:00-14:00 (5 hrs)     - Zoom meeting with Lior, tested query_automation.py script on Ardom's servers. had bugs and needed further testing. (WEEKEND 11-12/12) - Started solving the problems i had and implement the new things Elhanan asked for, made very nice progress, hopfully tommorow will finish what i want to do, then on Monday test at Ardom's servers.  very close to finishing functionallity for this project. (NEXT DAY) Kept working on the script - worked perfectly, then refactored the code a lot.
10/12 - 15:00-22:00 (7 hrs)     - Zoom meeting with Lior in the morning, tested the script, then fixed some issues. Zoom meeting with Elhanan at noon, then added some features and fixed some issues. Another Zoom meeting with Lior and Elhanan at night, tested the script, Elhanan and i will meet in the morning at Yotvata and finish the last steps in the functionallity.
11/12 - 10:30-16:00 (5.5 hrs)   - Meeting with Elhanan in Yotvata, tested some needed tests and fixed accordingly. Elhanan also asked some new requasts, and worked on those too. have some work to do at home, more testing at Ardom and that should be it.
13/12 - 12:30-19:00 (6.5 hrs)   - Worked at Ardom's office in Yotvata, fixed last bugs and added last features, brought the code to a working condition. Then, at home, kept working on Lior's new requasts, made a lot of progress and finished all of them except the last one which im close to finish.
14/12 - 16:45


Title:          1st POC
Requirement:    Run wxPython application inside Docker container. 
Result:         Success - needed to install VcXsrv on the host (done using Chocolatey) - https://dev.to/darksmile92/run-gui-app-in-linux-docker-container-on-windows-host-4kde

Title:          2nd POC
Requirement:    Access host's Windows Registry
Result:         Success - needed to connect the Docker container and the host via SSH in order to run scripts from the container on the host

Title:          3rd POC
Requirement:    Test resource allocation with wxPython container
Result:         Made a bash script to reveal Docker's resource consumption and allocation (Docker stats) 

Title:          4th POC
Requirement:    Create 2 virtual environments and install different versions of the same package 
Result:         Created 2 virtual environments, installed different wxPython versions on them

Other Tasks:
-----------------
1. Configured a test Dockerfile for running wxPython application
2. Installed and tested Docker Toolbox on local machine instead of Docker Desktop, since Docker Docker Desktop does not support Windows server 2008
3. Reaseached ways to expose GUI from Docker containers on host machines running Windows OS (see VcXsrv above)
4. Wrote a script to generate SSH keys and reaseached how to use "REG QUARY" functions
5. Wrote a script for executing script over SSH from the container (=local) on the host (=remote)




Before army project discription:



Lior is manager and Yosi is the CEO

1st step - get list of servers ip's\host name's and find out what OS type

2nd step - relational DB (XL file) that consists PATH TO QUERY, SERVER DETAILS - related by which query to which OS type 

3rd step - choose several QUERYs to executue on several SERVERs - get answers to XL\xml\csv\txt file

4th step (optinal) - GUI

5th step (optinal) - .EXE


notes: 

    - - - - - - connect to each pc with ssh using the ip list, transfer all the files to that pc and run all the scripts

    list of servers will create dynimicly - will be given a list of ip\host name

    - detialed exeptions\logs

    SEND EMAIL TO LIOR@ARDOM.NET - 052-8641386

questions:

    - from where we execute the initial script (how we speak to each server)

    - will the query be PowerShell or CMD or somthing else - .bat\ cmd
